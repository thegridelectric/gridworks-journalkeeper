"""create data_channels, readings and make scada plural

Revision ID: f183a8a6ac28
Revises: 08bb9e1becc1
Create Date: 2024-07-20 11:49:01.266421

"""

from typing import Sequence
from typing import Union

import sqlalchemy as sa

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "f183a8a6ac28"
down_revision: Union[str, None] = "08bb9e1becc1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "data_channels",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("display_name", sa.String(), nullable=False),
        sa.Column("about_node_name", sa.String(), nullable=False),
        sa.Column("captured_by_node_name", sa.String(), nullable=False),
        sa.Column("telemetry_name", sa.String(), nullable=False),
        sa.Column("start_s", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "readings",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("value", sa.BigInteger(), nullable=False),
        sa.Column("time_ms", sa.BigInteger(), nullable=False),
        sa.Column("data_channel_id", sa.String(), nullable=False),
        sa.Column("message_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "time_ms",
            "data_channel_id",
            "message_id",
            name="unique_time_data_channel_message",
        ),
    )
    op.create_table(
        "scadas",
        sa.Column("g_node_id", sa.String(), nullable=False),
        sa.Column("g_node_alias", sa.String(), nullable=False),
        sa.Column("short_alias", sa.String(), nullable=False),
        sa.Column("scada_installed_s", sa.Integer(), nullable=True),
        sa.Column("ta_fully_installed_s", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("g_node_id"),
    )
    op.drop_table("scada")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "scada",
        sa.Column("g_node_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("g_node_alias", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("short_alias", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "scada_installed_s", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "ta_fully_installed_s", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("g_node_id", name="scada_pkey"),
    )
    op.drop_table("scadas")
    op.drop_table("readings")
    op.drop_table("data_channels")
    # ### end Alembic commands ###
